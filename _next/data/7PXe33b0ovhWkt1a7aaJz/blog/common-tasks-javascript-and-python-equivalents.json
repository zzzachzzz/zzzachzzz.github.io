{"pageProps":{"post":{"title":"Common Tasks: JavaScript and Python Equivalents","date":"2019-11-13T05:06:20.818Z","content":"\n## Template Strings\n\n```javascript\n// JavaScript\nlet name = 'Timmy';\nconsole.log(`${name}: ${3+9} btw haHAA`);  // Timmy: 12 btw haHAA\n```\n\n```python\n# Python (3.6+)\nname = 'Timmy';\nprint(f\"{name}: {3+9} btw haHAA\");  # Timmy: 12 btw haHAA\n```\n\n## Ternary Operator\n\n```javascript\n// JavaScript\nlet x = 0;\nx += true ? 1 : 0;\nconsole.log(x);  // 1\n```\n\n```python\n# Python\nx = 0\nx += 1 if True else 0\nprint(x)  # 1\n```\n\n## Array / List Manipulation\n\n```javascript\n// JavaScript\nlet x = [3];  // x: [3]\nx.push(5);  // x: [3, 5]\nlet y = x;  // x: [3, 5], y: [3, 5]\nconsole.log(x == y);  // true\n// Clone an array (shallow copy)\ny = [...x];  // x: [3, 5], y: [3, 5]\n// Or\ny = x.slice()\nconsole.log(x == y);  // false\n// Check for equality\nconsole.log(x.length === y.length && x.every((e, i) => e === y[i]))  // true\nx.pop()  // x: [3], y: [3, 5]\nconsole.log(x.length === y.length && x.every((e, i) => e === y[i]))  // false\n```\n\n```python\n# Python\nx = [3]  # x: [3]\nx.append(5)  # x: [3, 5]\ny = x  # x: [3, 5], y: [3, 5]\nprint(x is y)  # True\n# Clone a list (shallow copy)\ny = x.copy()  # x: [3, 5], y: [3, 5]\n# Or\ny = list(x)\nprint(x is y)  # False\n# Check for equality\nprint(x == y)  # True\nx.pop()  # x: [3], y: [3, 5]\nprint(x == y)  # False\n```\n\n## Reading & Writing JSON Files\n\n```javascript\n// JavaScript\nconst fs = require('fs');\n\nfs.writeFileSync('data.json', JSON.stringify({a: 1, b: 2}, null, 4));\nlet data = JSON.parse(fs.readFileSync('data.json'));\nconsole.log(data);  // {a: 1, b: 2}\n```\n\n```python\n# Python\nimport json\n\nwith open('data.json', 'w') as file:\n    json.dump({'a': 1, 'b': 2}, file, indent=4)\nwith open('data.json', 'r') as file:\n    data = json.load(file)\nprint(data)  # {'a': 1, 'b': 2}\n```\n\n## For Loops and Iteration\n\n```javascript\n// JavaScript\nconst arr = ['a', 'b'];\n\nfor (let i = 0; i < arr.length; i++) {\n  console.log(i, arr[i]);  // 0 'a' , 1 'b'\n}\n\nfor (const x of arr) {\n  console.log(x);  // a , b\n}\n\nconst obj = {a: 1, b: 2};\n\nfor (const key in obj) {\n  console.log(key, obj[key]);  // a 1 , b 2\n}\n\nfor (const [key, value] of Object.entries(obj)) {\n  console.log(key, value);  // a 1 , b 2\n}\n```\n\n```python\n# Python\narr = ['a', 'b']\n\nfor i in range(len(arr)):\n    print(i, arr[i])  # 0 a , 1 b\n\nfor x in arr:\n    print(x)  # a , b\n\nobj = {'a': 1, 'b': 2}\n\nfor key in obj:\n    print(key, obj[key])  # a 1 , b 2\n\nfor key, value in obj.items():\n    print(key, value)  # a 1 , b 2\n```\n\n## List Comprehension / Array Map\n\n```javascript\n// JavaScript\nlet arr = Array.from({length: 4}, _ => null);\nconsole.log(arr);  // [null, null, null, null]\n\narr = [1, 2, 3, 4].map(x => x % 2 === 0 ? true : false);\nconsole.log(arr);  // [false, true, false, true]\n\narr = [1, 2, 3, 4].filter(x => x % 2 === 0).map(x => x + 100);\nconsole.log(arr);  // [102, 104]\n// OR in a single iteration:\narr = [1, 2, 3, 4].reduce((filtered, x) => {\n  if (x % 2 === 0) filtered.push(x + 100);\n  return filtered;\n}, []);\nconsole.log(arr);  // [102, 104]\n```\n\n```python\n# Python\narr = [None for i in range(4)]\nprint(arr)  # [None, None, None, None]\n\narr = [True if x % 2 == 0 else False for x in [1, 2, 3, 4]]\nprint(arr)  # [False, True, False, True]\n\narr = [x + 100 for x in [1, 2, 3, 4] if x % 2 == 0]\nprint(arr)  # [102, 104]\n```\n\nMore to come\n\n\\_\\_\\_\n","slug":"common-tasks-javascript-and-python-equivalents"}},"__N_SSG":true}